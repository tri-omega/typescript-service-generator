/*
 * Copyright (c) 2018 William Frank (info@williamfrank.net)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
    }
}

plugins {
    id 'net.ltgt.apt' version '0.10'
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'org.junit.platform.gradle.plugin'


sourceCompatibility = 1.8
version = '0.1'
group = 'io.github.tri-omega'
archivesBaseName = 'typescript-service-generator'

repositories {
    mavenLocal()
    mavenCentral()
}

ext.versions = [
        spring: '4.3.5.RELEASE',
        guava : '20.0',
        junit : '5.0.1',
        lombok: '1.16.20'
]

idea {
    module {
        // Marks the already(!) added srcDir as "generated"
        generatedSourceDirs += file( "${projectDir}/src/test/resources")
    }
}

sourceSets {
    test {
        resources {
            srcDirs = ["${projectDir}/src/test/java", "${projectDir}/src/test/resources"]
            include '**/*'
        }
    }
}


dependencies {
    compileOnly("org.springframework:spring-webmvc:${versions.spring}")

    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    apt "org.projectlombok:lombok:${versions.lombok}"

    testCompile "com.google.guava:guava:${versions.guava}"
    testCompile 'com.google.testing.compile:compile-testing:0.10'

    testCompile("org.junit.jupiter:junit-jupiter-api:${versions.junit}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${versions.junit}")

    testCompile("org.springframework:spring-webmvc:${versions.spring}")

    testCompile "org.projectlombok:lombok:${versions.lombok}"
    testApt "org.projectlombok:lombok:${versions.lombok}"
}

